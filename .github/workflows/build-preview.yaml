name: Build Preview Deployment

on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

jobs:
  build-preview:
    if: ${{ github.repository == 'ilikui/NotesBook' }}
    runs-on: ubuntu-latest
    name: Build Preview
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'  # 添加 npm 缓存

      - name: Verify Node versions
        run: |
          echo "Node.js version: $(node -v)"
          echo "npm version: $(npm -v)"

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci

      - name: Fix execution permissions
        run: |
          echo "修复执行权限..."
          # 检查并修复 node_modules/.bin 权限
          if [ -d "node_modules/.bin" ]; then
            echo "修复 node_modules/.bin 权限"
            chmod -R +x node_modules/.bin/
            ls -la node_modules/.bin/ | head -10
          fi
          
          # 查找并修复所有 quartz 相关文件的权限
          echo "查找 quartz 相关文件..."
          find . -name "*quartz*" -type f | while read file; do
            echo "修复权限: $file"
            chmod +x "$file"
          done
          
          # 特别查找名为 quartz 的文件
          find . -name "quartz" -type f -exec chmod +x {} \; -exec ls -la {} \;
          echo "权限修复完成"

      - name: Format code with Prettier
        run: npx prettier --write .

      - name: Check types and style
        run: npm run check

      - name: Build Quartz
        run: |
          # 尝试多种方式运行 quartz
          echo "尝试运行 quartz 构建..."
          if [ -f "node_modules/.bin/quartz" ]; then
            ./node_modules/.bin/quartz build -d content -v
          else
            npx quartz build -d content -v
          fi

      - name: Verify build output
        run: |
          echo "构建输出内容:"
          ls -la public/ || echo "public 目录不存在"
          find public/ -type f | head -10 || true

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: public-build
          path: public